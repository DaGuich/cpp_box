language: cpp

matrix:
  include:
    - name: "gcc 7 Debug Coverage"
      os: linux
      sudo: false
      env: CXX_EXE=/usr/bin/g++-7 CC_EXE=/usr/bin/gcc-7 GCOV=/usr/bin/gcov-7 CMAKE_OPTS="-D ONLY_COVERAGE:BOOL=TRUE -D CMAKE_BUILD_TYPE:STRING=Debug"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libx11-dev
            - libxrandr-dev
            - libudev-dev
            - g++-7
    - name: "gcc 8 Release"
      os: linux
      sudo: false
      env: CXX_EXE=/usr/bin/g++-8 CC_EXE=/usr/bin/gcc-8 GCOV=/usr/bin/gcov-8 CMAKE_OPTS="-D CMAKE_BUILD_TYPE:STRING=Release"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libx11-dev
            - libxrandr-dev
            - libudev-dev
            - g++-8
    - name: "clang 6.0 Debug"
      os: linux
      sudo: false
      env: CXX_EXE=/usr/bin/clang++-6.0 CC_EXE=/usr/bin/clang-6.0 GCOV=/usr/bin/gcov-8 CMAKE_OPTS="-D CMAKE_BUILD_TYPE:STRING=Debug"
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-6.0
          packages:
            - libx11-dev
            - libxrandr-dev
            - libudev-dev
            - clang-6.0




install:
  pip install --user conan

script:
  - export CXX=$CXX_EXE
  - export CC=$CC_EXE
  - echo $CXX
  - $CXX --version
  - mkdir build
  - cd build
  - conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan 
  - conan install .. --build missing
  - cmake -D $CMAKE_OPTS ..
  - VERBOSE=1 cmake --build . -- -j2
  - ctest -j2
  - bash <(curl -s https://codecov.io/bash) -x $GCOV 2>/dev/null



